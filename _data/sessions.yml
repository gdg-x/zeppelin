-
  id: 307
  title: "Coffee Break"
  place: "Hall"
  service: true
  description: "The best time to talk with speakers and attendees"
-
  id: 503
  title: "Lunch Break"
  place: "Dining room"
  service: true
-
  id: 001
  title: "Accidentally Famous"
  description: "How I became Siri: The voiceover business, how being “Siri” affected me and the lessons I learned from it."
  subtype: workshop
  speakers: [1]
  language: en
#  video: "https://video-url-goes-here"
-
  id: 002
  title: "Swift 5 and Beyond: World Domination?"
  description: "With Swift 5 on the horizon and Swift 6 development soon in full swing, we take a look at the current state of Swift. What's new in Swift 5, and what can we expect from Swift in the future? Will Swift soon reach World Domination?"
  subtype: presentation
  speakers: [2]
  language: en
  complexity: "Intermediate" 
#  presentation: "https://slides-url-goes-here"
-
  id: 003
  title: "Back to Front to Left Wrist"
  description: "From the onset, Swift was designed to take over the world — or at least the programming world. So it’s no surprise that the development community is excited to bring it’s power to as many platforms as possible. Our eager community was given Swift on Apple platforms, but no sooner than it was open sourced did we get the power to write Swift on Linux (and some people have even figured out how to run it on Android)! In this workshop, we’re going to focus on the first two. Together we’ll build the foundations of a restaurant reservation service. We’ll start by making a server, written in Swift, for our app to interact with. Once we have the server and the app in place, we’ll build a watchOS app so you can our service without having to dig out your phone!"
  outcome: |
   - How to build and deploy a Swift server, using the Perfect framework
   - How to build a simple iPhone app that will interact with data from our server
   - How to more easily debug cross-platform issues
   - How to build a simple Apple Watch app to expand upon already rich features
  subtype: workshop
  speakers: [4]
  language: en
-
  id: 004
  title: "Patterns & Methodologies for Test Suite Design"
  description: "For a topic so fundamental to the practice of software engineering, designing test suites and measuring their efficacy remains difficult. For example, how does one determine the origin of a test failure in the codebase, or know if they’re designing testable components? Beyond that, what are common indicators of an over-tested codebase? Questions like these become more challenging given particular domains and applications, and usually require non-obvious testing strategies.\n
  
  To help you answer these questions, this presentation will go through the development process of a thoroughly tested audio synthesizer and demonstrate patterns and methodologies that can help you build a better test suite. By the end of the presentation, you'll have developed a toolkit for building an effective, easy-to-use, and understandable test suite."
  outcome:  |
   - What metrics to consider when measuring the efficacy of your test suite
   - How to intentionally indicate a specific part of your codebase is the source of a failure
   - How a test suite guides your system’s design & eases re-factoring
   - How system boundaries influence a codebase’s testability
   - About collaboration, contract, integration, journey & white box/blackbox tests
   - About system & feature-level testing



  subtype: presentation
  speakers: [3]
  language: en
  complexity: "Intermediate"
-
  id: 005
  title: "iOS Interviews Don’t Have To Be Hard"
  description: "iOS technologies are rapidly evolving with every WWDC announcement, and it is increasingly challenging for iOS developers to keep up with the features, innovations, and best practices. It is especially difficult for those preparing for job interviews to navigate the breadth of information available and focus on the most critical topics and skills. Whether you’re a beginner developer seeking that dream job or a seasoned veteran who is ready for a better one — this talk will prepare you to succeed in your next technical iOS interview."
  outcome: |
   This presentation will give an overview of the most important topics and skills covered in a technical iOS interview including
     
     - typical questions during the various interview stages from phone screens to onsites
     - critical components of the iOS tech stack: UI, networking, storage, design patterns, etc
     - contemporary best practices
     - best resources for preparing for technical interviews
     
   At the end of this session, the audience will be fully ready to tackle their next iOS interview and know where to go to improve their skills and knowledge in specific topics.
  subtype: presentation
  speakers: [5]
  language: en
-
  id: 006
  title: "The Simple Layout of a Complex Interface"
  description: |
   Understanding Auto Layout is your best chance to write UI code you can be proud of. Its power often underestimated, its features easily misused, I find it overall less appreciated than it could be, if more widely understood.

   This talk is aiming to show how relying heavily on Auto Layout makes you move faster and be more confident writing UI code. Working with the safe area, showing off custom UILayoutGuides and making use of the controversal UIStackViews, we will walk through the simple code of a more complex interface together.
  outcome: |
   - How to express layout fast and simple, without touching Interface Builder
   - How Auto Layout helps to reduce state in your views / view controllers
   - Why the safe area is great and how to rely on it without knowing what device your code is running on
   - When to use custom UILayoutGuides and how they help to avoid using numeric values all around
   - UIStackViews: why they are great, but controversial. How to work with stack views in scrollable layouts
  subtype: presentation
  speakers: [6]
  language: en
-
  id: 007
  title: "Collaboration by Design! “What’chu talkin’ ‘bout, Willis?”"
  description: |
   A lot of developers are quick to say that designers should learn to develop. To me, being able to design is an important skill to have as a developer. We all know that there is a significant divide when it comes to designers and developers. This split limits us to be better developers because sometimes we do not want to see the other side of things. Sometimes we as developers do not understand the designer's point of view. Developers and designers have different specialties that we can leverage from each other.

   In this talk, I will discuss the different specialties we can take advantage of from both sides. Additionally, I will cover why you should start picking your designer's brain today. Finally, I will discuss how to get started and what tools designers are using today for doing wireframes to iOS app designs.
  subtype: presentation
  speakers: [7]
  language: en
-
  id: 008
  title: "Story of 2 indie devs, 1M+ annual revenue"
  description: |
   My talk will tell our 3 year story as a 2 person independent developer team making the two popular photo and video editing apps Typorama and Videorama, reaching 6M downloads worldwide, generating 1M+ annual revenue on the App Store. I’ll be talking about both the technical and the business tactics and strategies we used to drive downloads and create products loved and used by millions.
  outcome: |
   Learning and using the latest programming technologies and trends is cool, but if you combine that with a business and marketing know-how, developers have a huge potential in their hands to create super profitable micro businesses just on their own. Making a living off the App Store is getting harder each day, and I’ll help the audience learn how to hack their way to success.
  subtype: presentation
  speakers: [8]
  language: en
-
  id: 009
  title: "Mutability: Perks and Quirks"
  description: |
   Writing Swift, I have a strong preference for immutable objects, why? Because immutability leads to simplicity and clarity since implicit in an object's creation, is a guarantee that it will never change. 

   It is remarkable how much this single, seemingly, simple fact, can make programs easier to verify, and reason about.

   But, in object-oriented environments, blindly defaulting to immutable objects can lead to unintended consequences.
  outcome: |
   - Why immutability. 
   - Walk through how I chose an immutable object to solve a problem, how that lead to a perplexing bug, and how I resolved it.
   - Establish when to consider using immutable objects.
  subtype: presentation
  speakers: [12]
  language: en

-
  id: 010
  title: "Swift's Future Belongs To Those Who Show Up"
  description: |
   Swift Evolution is an exhausting thing: high traffic, some signal to noise issues, and a lot of work to follow the ins outs and details. Without voices from the wider developer community, it may not serve the interests you prioritize in your day to day work. From safety to convenience, migration to stability, here's how you can be a part of the process even if you only have a very little time to spend. Apple's open sourced language represents the first time there's a fully open bug reporting system and a way for anyone no matter their background to have their opinions heard and considered. If you're new to Swift Evolution or gave up on it in frustration, let Erica Sadun show you how to make the most of your limited time in having a say in the future of the language.
  subtype: presentation
  speakers: [13]
  language: en
-
  id: 999
  title: "Stay Tuned - more speakers coming soon!"
  description: "More speakers coming soon!"
  subtype: presentation
  speakers: []
