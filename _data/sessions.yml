-
  id: 301
  title: "Registration & Morning Tea"
  place: "Hall"
  service: true
  description: "Get your lanyard, swag, and coffee on before the talks!"
-
  id: 302
  title: "Welcome"
  place: "Conference Room 1"
  service: true
  description: "The organisers welcome you to DevOpsDays Sydney 2019!"
-
  id: 401
  title: "Sponsor #1"
  place: "Conference Room 1"
  service: true
-
  id: 402
  title: "Sponsor #2"
  place: "Conference Room 1"
  service: true
-
  id: 503
  title: "Lunch Break"
  place: "Hall"
  service: true
-
  id: 504
  title: "Morning Break"
  place: "Hall"
  description: "The best time to catch up with other speakers and attendees"
-
  id: 505
  title: "Open Spaces"
  place: "Hall"
  description: "Open Spaces give attendees the opportunity to talk about anything they’d like. A person might suggest a topic they want to learn about, or one they feel like they can help others with. The topics range widely, from highly technical, to pure culture, to board games for networking."
-
  id: 001
  title: "Who Destroyed Three Mile Island?"
  description: "On March 28, 1979, at exactly 4 o’clock in the morning, control rods slammed into the reactor core of Three Mile Island Unit #2, halting the nuclear reaction because of a fault in the reactor cooling system. At 4:02, the automated emergency cooling system activated as the reactor core temperature continued to rise. At 4:04, one of the plant operators made the befuddling decision to switch off the emergency cooling system, dooming the reactor to partial meltdown. Why? When something bad happens, it’s easy to just blame someone and move on. Taking the time to find the systemic causes, though, will not only help keep the problem from repeating, it will enable you to build the psychological safety necessary for your team to truly collaborate. Let’s let the story of Three Mile Island teach us how to make our teams stronger through systems thinking and just culture."
  subtype: keynote
  speakers: [1]
-
  id: 002
  title: "Avengers Assemble - The Thanos Incident"
  description: "Over the course of the Avengers storyline, everything has been leading up to the ultimate outage—when Thanos snapped his fingers, eliminating half of all life in the universe.<br><br>Come along with me on a journey to perform a retrospective on this greatest of all incidents in the Marvel universe. What were the contributing factors? How could the Avengers have followed better incident response procedures? And can this be reviewed in a truly blameless fashion?<br><br>In this talk, I will revisit the storyline across the Marvel Cinematic Universe that led up to a critical event: the “Snap,” when Thanos removes half of all life in the universe at the end of Avengers: Infinity War, as well as the resolution displayed in Avengers: Endgame. We will explore the activities of the incident response teams (the Avengers, the Guardians of the Galaxy, and more), to discover what they did well, what they could have done better, and why S.H.I.E.L.D. needs to invest in better Incident Response training.<br><br>The audience will learn how to engage in productive Incident Response practices, conduct blameless postmortems, and even why a properly used pager (ala Captain Marvel) can be a key element in successfully navigating even the most dire of universal crises."
  subtype: presentation
  speakers: [8]
-
  id: 003
  title: "Thou shalt not template YAML: Kubernetes Configuration Management with kr8"
  description: "Launching a Kubernetes cluster is only the first stage of adopting Kubernetes. Kubernetes requires layers of components to create a production-ready platform.<br><br>Installing these components is not a known quantity and the current crop of configuration management tooling, like Puppet, Ansible and Chef don’t understand the abstraction layer of remote APIs.<br><br>Additionally, as the number of Kubernetes clusters you run grows, your ability to install components on them with slight and subtle differences becomes more and more manual. You’re left with snowflake clusters.<br><br>A new crop of tools like Kapitan and Ksonnet have recently come out that attempt to address these issues. We tried several but found significant shortcomings in existing approaches, so we created kr8 :a configuration management tool designed to bring an infrastructure as code philosophy to Kubernetes components.<br><br>This talk will cover the story of how kr8 became necessary for a team of cluster operators, as well as show a practical demo and example of deploying the components needed to build a Kubernetes based platform to multiple clusters across cloud providers, regions and development environments."
  subtype: presentation
  speakers: [3]
-
  id: 004
  title: "Using Metrics to Build High Performance Teams"
  description: "This talk is about the who, what, when, where and why of team measurement, with the ideal outcome being happier, healthier, more balanced, more engaged and higher performing teams.<br><br>I'll talk about the important things to measure, some things I've seen work, what those data points can tell you and what how you can use that information for the betterment of your teams."
  subtype: presentation
  speakers: [5]
-
  id: 005
  title: "TBA"
  description: "TBA"
  subtype: keynote
  speakers: [2]
-
  id: 006
  title: "From Monitoring to Automated Testing of your Infrastructure Code"
  description: "Don't have time to write automated tests for your infrastructure code? Don't see the point? Or don't know where to start? This talk is for you.<br><br>Now we're writing code to manage our infrastructure with tools like Chef, Puppet, Ansible, etc, we are effectively developing software. One of the wonderful aspects to this is that we have the world of software development quality best practices to draw on in order to achieve a high rate of change while not compromising on reliability. Writing tests for infrastructure code (and having them execute automatically as part of a continuous integration pipeline) is a key element to this, and is the focus for this talk.<br><br>But how do you get started on this? What are some tools to help? How should we think about this problem? This talk will provide an overview of the different types of tests that can be written, from small unit tests to integration and acceptance testing. It will focus on integration testing where existing monitoring checks can provide useful starting point.<br><br>After this talk attendees will:<ul> <li>Better understand the value of automated tests for infrastructure code</li><li>Be motivated to write tests and implement CI pipelines to execute these tests automatically</li><li>Know how to get started with some suggested open source tooling</li></ul>"
  subtype: presentation
  speakers: [10]
# -
#   id: 005
#   title: "Test: Interacting with Google Services using nothing but HTML"
#   description: "Google has 1M APIs and services. Every API is different! Learn how you can interact with Google services without writing code! Designing your UI so it works across multiple screen sizes is no longer a nice to have, it is *the* way to build for the web. Using Polymer, we'll cover how to create robust, responsive elements that work across all platforms."
#   subtype: presentation
#   speakers: [1]
#   language: en
#   complexity: "Expert"
#   presentation: "https://speakerdeck.com/gdglviv/michal-tajchert-wearables-views"
#   video: "//www.youtube.com/embed/v3SCiUqI1yQ"
